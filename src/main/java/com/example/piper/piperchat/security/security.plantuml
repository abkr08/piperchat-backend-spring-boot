@startuml

title __SECURITY's Class Diagram__\n

  namespace  {
    namespace om.example.piper.piperchat {
      namespace security {
        class com.example.piper.piperchat.security.AppExceptionsHandler {
            + handleAuthExceptions()
        }
      }
    }
  }
  

  namespace  {
    namespace om.example.piper.piperchat {
      namespace security {
        class com.example.piper.piperchat.security.CustomUserDetail {
            ~ authorities : Set<GrantedAuthority>
            + getAuthorities()
            + getPassword()
            + getUser()
            + getUsername()
            + isAccountNonExpired()
            + isAccountNonLocked()
            + isCredentialsNonExpired()
            + isEnabled()
            + setAuthorities()
            + setUser()
        }
      }
    }
  }
  

  namespace  {
    namespace om.example.piper.piperchat {
      namespace security {
        class com.example.piper.piperchat.security.JWTAuthenticationEntryPoint {
            + commence()
        }
      }
    }
  }
  

  namespace  {
    namespace om.example.piper.piperchat {
      namespace security {
        class com.example.piper.piperchat.security.JWTAuthenticationFilter {
            - authenticationManager : AuthenticationManager
            + JWTAuthenticationFilter()
            + attemptAuthentication()
            # successfulAuthentication()
            # unsuccessfulAuthentication()
        }
      }
    }
  }
  

  namespace  {
    namespace om.example.piper.piperchat {
      namespace security {
        class com.example.piper.piperchat.security.JWTAuthorizationFilter {
            + JWTAuthorizationFilter()
            # doFilterInternal()
            - getAuthentication()
        }
      }
    }
  }
  

  namespace  {
    namespace om.example.piper.piperchat {
      namespace security {
        class com.example.piper.piperchat.security.SecurityConfiguration {
            + SecurityConfiguration()
            + bCryptPasswordEncoder()
            # configure()
            # configure()
            ~ corsConfigurationSource()
        }
      }
    }
  }
  

  namespace  {
    namespace om.example.piper.piperchat {
      namespace security {
        class com.example.piper.piperchat.security.SecurityConstants {
            {static} + EXPIRATION_TIME : long
            {static} + HEADER_STRING : String
            {static} + SECRET : String
            {static} + SIGN_IN_URL : String
            {static} + SIGN_UP_URL : String
            {static} + TOKEN_PREFIX : String
        }
      }
    }
  }
  

  com.example.piper.piperchat.security.AppExceptionsHandler -up-|> org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler
  com.example.piper.piperchat.security.CustomUserDetail .up.|> org.springframework.security.core.userdetails.UserDetails
  com.example.piper.piperchat.security.CustomUserDetail o-- com.example.piper.piperchat.model.User : user
  com.example.piper.piperchat.security.JWTAuthenticationEntryPoint .up.|> org.springframework.security.web.AuthenticationEntryPoint
  com.example.piper.piperchat.security.JWTAuthenticationFilter -up-|> org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter
  com.example.piper.piperchat.security.JWTAuthorizationFilter -up-|> org.springframework.security.web.authentication.www.BasicAuthenticationFilter
  com.example.piper.piperchat.security.SecurityConfiguration -up-|> org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter
  com.example.piper.piperchat.security.SecurityConfiguration o-- com.example.piper.piperchat.security.JWTAuthenticationEntryPoint : jwtAuthEndPoint
  com.example.piper.piperchat.security.SecurityConfiguration o-- com.example.piper.piperchat.service.UserDetailsServiceImpl : userDetailsService


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
