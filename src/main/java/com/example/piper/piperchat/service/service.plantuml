@startuml

title __SERVICE's Class Diagram__\n

  namespace  {
    namespace om.example.piper.piperchat {
      namespace service {
        class com.example.piper.piperchat.service.AmazonS3Service {
            - bucketName : String
            - endpointUrl : String
            - region : Region
            {static} - s3 : S3Client
            + initializeS3Client()
            + uploadImage()
            - convertMultiPartToFile()
            - generateFileName()
            - uploadFileTos3bucket()
        }
      }
    }
  }
  

  namespace  {
    namespace om.example.piper.piperchat {
      namespace service {
        class com.example.piper.piperchat.service.RoomService {
            + acceptChatRequest()
            + addMessage()
            + addUsersToRooms()
            + checkRoomDuplicity()
            + createAGroup()
            + createARoom()
            + denyChatRequest()
            + getMessages()
            + getNullPropertyNames()
        }
      }
    }
  }
  

  namespace  {
    namespace om.example.piper.piperchat {
      namespace service {
        class com.example.piper.piperchat.service.UserDetailsServiceImpl {
            + loadUserByUsername()
        }
      }
    }
  }
  

  namespace  {
    namespace om.example.piper.piperchat {
      namespace service {
        class com.example.piper.piperchat.service.UserService {
            + findUser()
            + registerNewUserAccount()
            + updateUserDisplayImage()
        }
      }
    }
  }
  

  namespace  {
    namespace om.example.piper.piperchat {
      namespace service {
        class com.example.piper.piperchat.service.UserValidator {
            - errors : HashMap<String, String>
            + UserValidator()
            + equals()
            + getErrors()
            + getUserRepository()
            + hashCode()
            + setErrors()
            + setUserRepository()
            + toString()
            + validate()
            # canEqual()
            - emailExist()
            - usernameExists()
        }
      }
    }
  }
  

  com.example.piper.piperchat.service.RoomService o-- com.example.piper.piperchat.repository.MessageRepository : messageRepository
  com.example.piper.piperchat.service.RoomService o-- com.example.piper.piperchat.repository.RoomRepository : roomRepository
  com.example.piper.piperchat.service.RoomService o-- com.example.piper.piperchat.service.UserService : userService
  com.example.piper.piperchat.service.UserDetailsServiceImpl .up.|> org.springframework.security.core.userdetails.UserDetailsService
  com.example.piper.piperchat.service.UserDetailsServiceImpl o-- com.example.piper.piperchat.repository.UserRepository : userRepository
  com.example.piper.piperchat.service.UserService o-- com.example.piper.piperchat.repository.UserRepository : userRepository
  com.example.piper.piperchat.service.UserValidator o-- com.example.piper.piperchat.repository.UserRepository : userRepository


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
